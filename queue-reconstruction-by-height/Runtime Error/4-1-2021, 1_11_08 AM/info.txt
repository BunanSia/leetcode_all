{"id":474761473,"lang":"java","time":"6 months, 3 weeks","timestamp":1617210668,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/474761473/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"N/A","code":"class Solution {\n    public int[][] reconstructQueue(int[][] people) {\n        int[][] result;\n        result=new int[people.length][2];\n        Arrays.sort(people, new Comparator<int[]>(){\n            @Override\n            public int compare(int[] first, int[] second) {\n               if(first[0] > second[0]) return 1;\n               else return -1;\n            }\n       });\n       for(int i=0;i<people.length;i++){\n           result[i][0]=-1;\n       }\n       for(int i=0;i<people.length;i++){\n           int shift=people[i][1];\n               for(int j=0;j<people.length;j++){\n                   if(shift==0&&result[j][0]==-1){\n                       result[j][0]=people[i][0];\n                       result[j][1]=people[i][1];\n                       break;\n                   }\n                   else if(result[j][0]==-1||result[j][0]>=people[i][0]){\n                       shift--;\n                   }\n               }\n       }\n       return result;\n    }\n}","compare_result":"111111111111111111110000000000000000","title_slug":"queue-reconstruction-by-height"}