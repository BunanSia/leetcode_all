{"id":474767453,"lang":"java","time":"6 months, 3 weeks","timestamp":1617211735,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/474767453/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"39.9 MB","code":"class Solution {\n    public int[][] reconstructQueue(int[][] people) {\n        int[][] result;\n        result=new int[people.length][2];\n        java.util.Arrays.sort(people, new java.util.Comparator<int[]>() {\n        public int compare(int[] a, int[] b) {\n        return Integer.compare(a[0], b[0]);\n    }\n});\n       for(int i=0;i<people.length;i++){\n           result[i][0]=-1;\n       }\n       for(int i=0;i<people.length;i++){\n           int shift=people[i][1];\n               for(int j=0;j<people.length;j++){\n                   if(shift==0&&result[j][0]==-1){\n                       result[j][0]=people[i][0];\n                       result[j][1]=people[i][1];\n                       break;\n                   }\n                   else if(result[j][0]==-1||result[j][0]>=people[i][0]){\n                       shift--;\n                   }\n               }\n       }\n       return result;\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height"}