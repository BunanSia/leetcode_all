{"id":475901262,"lang":"java","time":"6 months, 3 weeks","timestamp":1617457920,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/475901262/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"39.1 MB","code":"import java.util.stream.Collectors;\nclass Solution {\n    int remove=0;\n    int result=0;\n    ArrayList<Character> cur_result=new ArrayList<Character>();\n    public static String sortString(String inputString)\n    {\n        // convert input string to char array\n        char tempArray[] = inputString.toCharArray();\n          \n        // sort tempArray\n        Arrays.sort(tempArray);\n          \n        // return new sorted string\n        return new String(tempArray);\n    }\n    public int longestPalindrome(String s) {\n        s=sortString(s);\n        for (char c : s.toCharArray()) {\n          cur_result.add(c);\n        }   \n        do{\n            remove=0;\n            for(int i=0;i<cur_result.size();i++){\n                if(i>=1&&cur_result.get(i)==cur_result.get(i-1)){\n                    cur_result.remove(i);\n                    cur_result.remove(i-1);\n                    result+=2;\n                    remove++;\n                }\n            }\n        }while(remove!=0);\n        if(!cur_result.isEmpty())\n            result++;\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome"}