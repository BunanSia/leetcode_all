{"id":482167738,"lang":"java","time":"6 months, 1 week","timestamp":1618749805,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/482167738/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"48.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int[] arr;\n    List<Integer> list=new ArrayList<Integer>();\n    public void array(TreeNode root){\n        if(root!=null)\n            list.add(root.val);\n        else\n            return;\n        array(root.left);\n        array(root.right);\n    }\n    public int rangeSumBST(TreeNode root, int low, int high) {\n        array(root);\n        Collections.sort(list); \n        int indexstart=list.indexOf(low);\n        int indexend=list.indexOf(high);\n        int result=0;\n        for(int i=indexstart;i<=indexend;i++){\n            result+=list.get(i);\n        }\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}