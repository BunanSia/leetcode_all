{"id":475616841,"lang":"java","time":"6 months, 3 weeks","timestamp":1617389891,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/475616841/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"36.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\nclass Solution {\n    int sum=0;\n    public int sumOfLeftLeaves(TreeNode root) {       \n        if(root==null)\n            return 0;\n        if(root.left!=null&&root.left.left==null&&root.left.right==null){\n            sum+=root.left.val;\n            sumOfLeftLeaves(root.right);\n            return sum;\n        }\n        sumOfLeftLeaves(root.left);\n        sumOfLeftLeaves(root.right);\n        return sum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves"}