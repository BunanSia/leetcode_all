{"id":490115641,"lang":"java","time":"5 months, 2 weeks","timestamp":1620410659,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/490115641/","is_pending":"Not Pending","title":"Increasing Decreasing String","memory":"39.4 MB","code":"class Solution {\n    public String sortString(String s) {\n        int count=0;\n        int[] alphabet=new int[26];\n        char[] arr=s.toCharArray();\n        StringBuilder sb=new StringBuilder();\n        for(int i=0;i<arr.length;i++){\n            alphabet[arr[i]-'a']++;\n        }\n        while(count!=26){\n            count=0;\n            for(int i=0;i<alphabet.length;i++){\n                if(alphabet[i]!=0){\n                    String c=Character.toString('a'+i);\n                    sb.append(c);\n                    alphabet[i]--;\n                }\n                else\n                    count++;\n        }\n            count=0;\n            for(int i=alphabet.length-1;i>-1;i--){\n                if(alphabet[i]!=0){\n                    String c=Character.toString('a'+i);\n                    sb.append(c);\n                    alphabet[i]--;\n                }\n                else\n                    count++;\n            }\n        }\n        String result=sb.toString();\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"increasing-decreasing-string"}