{"id":478820458,"lang":"java","time":"6 months, 2 weeks","timestamp":1618048432,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/478820458/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int minDepth(TreeNode root) {\n        if (root==null)\n            return 0;\n        int l=minDepth (root.left);\n        int r=minDepth (root.right);\n        if(r<l)\n                return r+1;\n        else \n                return l+1;\n    }\n}","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree"}