{"id":478818278,"lang":"java","time":"6 months, 2 weeks","timestamp":1618047833,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/478818278/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"39.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int result;\n    public int maxDepth(TreeNode root) {\n        if(root==null)\n            return 0;\n        int l=maxDepth(root.left);\n        int r=maxDepth(root.right);\n        if(l>r)\n            result=l+1;\n        else\n            result=r+1;\n        return result;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}